[{"C:\\Users\\NhiLM\\Desktop\\Reactjs_Homework\\Covid19_Tracker\\Tracker_18_12\\NhiLM_CovidTracker\\src\\index.js":"1","C:\\Users\\NhiLM\\Desktop\\Reactjs_Homework\\Covid19_Tracker\\Tracker_18_12\\NhiLM_CovidTracker\\src\\reportWebVitals.js":"2","C:\\Users\\NhiLM\\Desktop\\Reactjs_Homework\\Covid19_Tracker\\Tracker_18_12\\NhiLM_CovidTracker\\src\\App.js":"3","C:\\Users\\NhiLM\\Desktop\\Reactjs_Homework\\Covid19_Tracker\\Tracker_18_12\\NhiLM_CovidTracker\\src\\slices\\index.jsx":"4","C:\\Users\\NhiLM\\Desktop\\Reactjs_Homework\\Covid19_Tracker\\Tracker_18_12\\NhiLM_CovidTracker\\src\\auth\\protected.jsx":"5","C:\\Users\\NhiLM\\Desktop\\Reactjs_Homework\\Covid19_Tracker\\Tracker_18_12\\NhiLM_CovidTracker\\src\\auth\\authroute.jsx":"6","C:\\Users\\NhiLM\\Desktop\\Reactjs_Homework\\Covid19_Tracker\\Tracker_18_12\\NhiLM_CovidTracker\\src\\slices\\trackerSlice.jsx":"7","C:\\Users\\NhiLM\\Desktop\\Reactjs_Homework\\Covid19_Tracker\\Tracker_18_12\\NhiLM_CovidTracker\\src\\slices\\userSlice.jsx":"8","C:\\Users\\NhiLM\\Desktop\\Reactjs_Homework\\Covid19_Tracker\\Tracker_18_12\\NhiLM_CovidTracker\\src\\pages\\home\\index.jsx":"9","C:\\Users\\NhiLM\\Desktop\\Reactjs_Homework\\Covid19_Tracker\\Tracker_18_12\\NhiLM_CovidTracker\\src\\pages\\detail\\index.jsx":"10","C:\\Users\\NhiLM\\Desktop\\Reactjs_Homework\\Covid19_Tracker\\Tracker_18_12\\NhiLM_CovidTracker\\src\\pages\\user\\sign-in\\index.jsx":"11","C:\\Users\\NhiLM\\Desktop\\Reactjs_Homework\\Covid19_Tracker\\Tracker_18_12\\NhiLM_CovidTracker\\src\\pages\\user\\sign-up\\index.jsx":"12","C:\\Users\\NhiLM\\Desktop\\Reactjs_Homework\\Covid19_Tracker\\Tracker_18_12\\NhiLM_CovidTracker\\src\\components\\NotFound\\index.jsx":"13","C:\\Users\\NhiLM\\Desktop\\Reactjs_Homework\\Covid19_Tracker\\Tracker_18_12\\NhiLM_CovidTracker\\src\\components\\Header\\index.jsx":"14","C:\\Users\\NhiLM\\Desktop\\Reactjs_Homework\\Covid19_Tracker\\Tracker_18_12\\NhiLM_CovidTracker\\src\\auth\\auth.jsx":"15","C:\\Users\\NhiLM\\Desktop\\Reactjs_Homework\\Covid19_Tracker\\Tracker_18_12\\NhiLM_CovidTracker\\src\\pages\\home\\infoBox\\index.jsx":"16","C:\\Users\\NhiLM\\Desktop\\Reactjs_Homework\\Covid19_Tracker\\Tracker_18_12\\NhiLM_CovidTracker\\src\\pages\\home\\map\\index.jsx":"17","C:\\Users\\NhiLM\\Desktop\\Reactjs_Homework\\Covid19_Tracker\\Tracker_18_12\\NhiLM_CovidTracker\\src\\pages\\home\\graph\\index.jsx":"18","C:\\Users\\NhiLM\\Desktop\\Reactjs_Homework\\Covid19_Tracker\\Tracker_18_12\\NhiLM_CovidTracker\\src\\pages\\home\\table\\index.jsx":"19","C:\\Users\\NhiLM\\Desktop\\Reactjs_Homework\\Covid19_Tracker\\Tracker_18_12\\NhiLM_CovidTracker\\src\\util\\constant.jsx":"20","C:\\Users\\NhiLM\\Desktop\\Reactjs_Homework\\Covid19_Tracker\\Tracker_18_12\\NhiLM_CovidTracker\\src\\util\\index.jsx":"21"},{"size":620,"mtime":1607927400164,"results":"22","hashOfConfig":"23"},{"size":362,"mtime":1607927400264,"results":"24","hashOfConfig":"23"},{"size":956,"mtime":1608261867359,"results":"25","hashOfConfig":"23"},{"size":876,"mtime":1607927401714,"results":"26","hashOfConfig":"23"},{"size":474,"mtime":1607927400480,"results":"27","hashOfConfig":"23"},{"size":464,"mtime":1607927400443,"results":"28","hashOfConfig":"23"},{"size":1641,"mtime":1608714468041,"results":"29","hashOfConfig":"23"},{"size":442,"mtime":1607927401799,"results":"30","hashOfConfig":"23"},{"size":4216,"mtime":1608607529639,"results":"31","hashOfConfig":"23"},{"size":7032,"mtime":1608620770199,"results":"32","hashOfConfig":"23"},{"size":2622,"mtime":1608892650888,"results":"33","hashOfConfig":"23"},{"size":1766,"mtime":1607927401583,"results":"34","hashOfConfig":"23"},{"size":222,"mtime":1607927400665,"results":"35","hashOfConfig":"23"},{"size":2199,"mtime":1608261769844,"results":"36","hashOfConfig":"23"},{"size":201,"mtime":1607927400380,"results":"37","hashOfConfig":"23"},{"size":776,"mtime":1607927401066,"results":"38","hashOfConfig":"23"},{"size":778,"mtime":1607927401182,"results":"39","hashOfConfig":"23"},{"size":4096,"mtime":1608620662668,"results":"40","hashOfConfig":"23"},{"size":4141,"mtime":1608712963919,"results":"41","hashOfConfig":"23"},{"size":792,"mtime":1608113695691,"results":"42","hashOfConfig":"23"},{"size":5260,"mtime":1608621100555,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"nws73",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"46"},"C:\\Users\\NhiLM\\Desktop\\Reactjs_Homework\\Covid19_Tracker\\Tracker_18_12\\NhiLM_CovidTracker\\src\\index.js",[],["93","94"],"C:\\Users\\NhiLM\\Desktop\\Reactjs_Homework\\Covid19_Tracker\\Tracker_18_12\\NhiLM_CovidTracker\\src\\reportWebVitals.js",[],"C:\\Users\\NhiLM\\Desktop\\Reactjs_Homework\\Covid19_Tracker\\Tracker_18_12\\NhiLM_CovidTracker\\src\\App.js",[],"C:\\Users\\NhiLM\\Desktop\\Reactjs_Homework\\Covid19_Tracker\\Tracker_18_12\\NhiLM_CovidTracker\\src\\slices\\index.jsx",["95","96"],"import { configureStore } from \"@reduxjs/toolkit\";\r\nimport userReducer from \"./userSlice\";\r\nimport trackerReducer from \"./trackerSlice\";\r\n\r\nconst saveLocal = (state) => {\r\n  try {\r\n    const stateSave = JSON.stringify(state);\r\n    localStorage.setItem('state', stateSave);\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst loadLocal = () => {\r\n  try {\r\n    const stateLoad = localStorage.getItem('state');\r\n    if (stateLoad === null) return undefined;\r\n    return JSON.parse(stateLoad)\r\n  } catch (e) {\r\n    return undefined;\r\n  }\r\n}\r\n\r\nconst rootReducer = {\r\n  user: userReducer,\r\n  tracker: trackerReducer,\r\n}\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n  // preloadedState: {\r\n  //   reducerName?: loadLocal()\r\n  // }\r\n})\r\n\r\n// store.subscribe(() => {\r\n//   saveLocal({\r\n//     reducerName?: store.getState()\r\n//   })\r\n// })\r\n\r\nexport default store;\r\n","C:\\Users\\NhiLM\\Desktop\\Reactjs_Homework\\Covid19_Tracker\\Tracker_18_12\\NhiLM_CovidTracker\\src\\auth\\protected.jsx",[],"C:\\Users\\NhiLM\\Desktop\\Reactjs_Homework\\Covid19_Tracker\\Tracker_18_12\\NhiLM_CovidTracker\\src\\auth\\authroute.jsx",[],"C:\\Users\\NhiLM\\Desktop\\Reactjs_Homework\\Covid19_Tracker\\Tracker_18_12\\NhiLM_CovidTracker\\src\\slices\\trackerSlice.jsx",["97"],"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from 'axios';\r\n\r\nexport const fetchCountries = createAsyncThunk('tracker/fetchCountries', async () => {\r\n  const response = await axios.get(\"https://disease.sh/v3/covid-19/countries\")\r\n  return response.data\r\n})\r\n\r\nexport const fetchAll = createAsyncThunk('tracker/fetchAll', async (param) => {\r\n  const response = await axios.get(param)\r\n  return response.data\r\n})\r\n\r\nexport const fetchHistoricalAll = createAsyncThunk('tracker/fetchHistoricalAll', async () => {\r\n  const response = await axios.get(\"https://disease.sh/v3/covid-19/historical/all?lastdays=all\")\r\n  return response.data\r\n})\r\n\r\nexport const fetchDetailCountry = createAsyncThunk('tracker/fetchDetailCountry', async (param) => {\r\n  const response = await axios.get(`https://disease.sh/v3/covid-19/countries/${param}`)\r\n  return response.data\r\n})\r\n\r\nconst tracker = createSlice({\r\n  name: \"tracker\",\r\n  initialState: {\r\n    dataCountries:[],\r\n    dataAll:{},\r\n    dataHistoricalAll:{},\r\n    dataDetail: {},\r\n    isLoading: false,\r\n  },\r\n  reducers: {},\r\n  extraReducers: {\r\n    [fetchCountries.fulfilled]: (state, action) => {\r\n      state.dataCountries = action.payload\r\n    },\r\n    [fetchAll.fulfilled]: (state, action) => {\r\n      state.dataAll = action.payload\r\n    },\r\n    [fetchHistoricalAll.fulfilled]: (state, action) => {\r\n      state.dataHistoricalAll = action.payload\r\n    },\r\n    [fetchDetailCountry.fulfilled]: (state, action) => {\r\n      state.dataDetail = action.payload\r\n    },\r\n  }\r\n});\r\n\r\nconst { reducer, actions } = tracker;\r\nexport const { } = actions;\r\nexport default reducer;","C:\\Users\\NhiLM\\Desktop\\Reactjs_Homework\\Covid19_Tracker\\Tracker_18_12\\NhiLM_CovidTracker\\src\\slices\\userSlice.jsx",[],"C:\\Users\\NhiLM\\Desktop\\Reactjs_Homework\\Covid19_Tracker\\Tracker_18_12\\NhiLM_CovidTracker\\src\\pages\\home\\index.jsx",["98","99"],"import React, { useState, useEffect } from 'react';\r\nimport {\r\n  MenuItem, FormControl, Select, Card, CardContent,\r\n} from \"@material-ui/core\";\r\nimport \"./home.css\";\r\nimport axios from \"axios\";\r\nimport InfoBox from \"./infoBox\";\r\nimport Map from \"./map\";\r\nimport TableTracker from \"./table\";\r\nimport Graph from './graph';\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport numeral from \"numeral\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchCountries, fetchAll, fetchHistoricalAll } from '../../slices/trackerSlice';\r\n\r\nfunction Home() {\r\n  const [country, setCountry] = useState('worldwide');\r\n  const [mapCenter, setMapCenter] = useState({ lat: 38.548165, lng: 27.682045 });\r\n  const [mapZoom, setMapZoom] = useState(3);\r\n  const [casesType, setCasesType] = useState(\"cases\");\r\n  const dispatch = useDispatch();\r\n  const dataCountries = useSelector(state => state.tracker.dataCountries);\r\n  const dataAll = useSelector(state => state.tracker.dataAll);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchCountries());\r\n    dispatch(fetchAll(\"https://disease.sh/v3/covid-19/all\"));\r\n    dispatch(fetchHistoricalAll());\r\n  }, [])\r\n\r\n  const onCountryChange = async (e) => {\r\n    const countryCode = e.target.value;\r\n    const url = countryCode === \"worldwide\"\r\n      ? \"https://disease.sh/v3/covid-19/all\"\r\n      : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\r\n\r\n    dispatch(fetchAll(url));\r\n    await axios.get(url).then(response => {\r\n      setCountry(countryCode);\r\n      if (countryCode != \"worldwide\") {\r\n        setMapCenter([response.data.countryInfo.lat, response.data.countryInfo.long]);\r\n        setMapZoom(5);\r\n      } else if (countryCode === \"worldwide\") {\r\n        setMapCenter({ lat: 10.762622, lng: 106.660172 });\r\n        setMapZoom(3);\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"tracker_container\">\r\n      <div className=\"form\">\r\n        <FormControl\r\n          className=\"dropdown\">\r\n          <Select\r\n            onChange={onCountryChange}\r\n            variant=\"outlined\"\r\n            value={country}\r\n          >\r\n            <MenuItem value=\"worldwide\">WorldWide</MenuItem>\r\n            {dataCountries.map((item) => (\r\n              <MenuItem\r\n                value={item.countryInfo.iso2}\r\n                key={item.countryInfo._id}\r\n              >{item.country}</MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n      </div>\r\n\r\n      <div className=\"info\">\r\n        <div className=\"info_box\">\r\n          <InfoBox\r\n            title=\"Cases\"\r\n            active={casesType === \"cases\"}\r\n            onClick={(e) => setCasesType(\"cases\")}\r\n            cases={numeral(dataAll.todayCases).format(\"0,0\")}\r\n            total={numeral(dataAll.cases).format(\"0,0\")} />\r\n        </div>\r\n        <div className=\"info_box\">\r\n          <InfoBox\r\n            title=\"Recoverd\"\r\n            active={casesType === \"recovered\"}\r\n            onClick={(e) => setCasesType(\"recovered\")}\r\n            cases={numeral(dataAll.todayRecovered).format(\"0,0\")}\r\n            total={numeral(dataAll.recoverd).format(\"0,0\")} />\r\n        </div>\r\n        <div className=\"info_box\">\r\n          <InfoBox\r\n            title=\"Deaths\"\r\n            active={casesType === \"deaths\"}\r\n            onClick={(e) => setCasesType(\"deaths\")}\r\n            cases={numeral(dataAll.todayDeaths).format(\"0,0\")}\r\n            total={numeral(dataAll.deaths).format(\"0,0\")} />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"app_wrapper\">\r\n        <div className=\"table_tracker\">\r\n          <Card className=\"table_card\">\r\n            <CardContent className=\"table_content\">\r\n              <h3>Worldwide Table</h3>\r\n              <TableTracker />\r\n            </CardContent>\r\n          </Card>\r\n        </div>\r\n        <div className=\"map\">\r\n          <Map\r\n            casesType={casesType}\r\n            center={mapCenter}\r\n            zoom={mapZoom} />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"graph\">\r\n        <Card className=\"graph_card\">\r\n          <CardContent className=\"graph_content\" >\r\n            <h3>Worldwide Graph</h3>\r\n            <Graph />\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home\r\n\r\n","C:\\Users\\NhiLM\\Desktop\\Reactjs_Homework\\Covid19_Tracker\\Tracker_18_12\\NhiLM_CovidTracker\\src\\pages\\detail\\index.jsx",["100","101"],"import React, { useState, useEffect } from 'react';\r\nimport { Card, CardContent, Typography } from \"@material-ui/core\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useParams } from \"react-router-dom\";\r\nimport \"./detail.css\";\r\nimport { fetchDetailCountry } from '../../slices/trackerSlice';\r\nimport numeral from \"numeral\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport { options } from \"../../util\";\r\nimport axios from \"axios\";\r\nimport { handleDateOfDay,\r\n  handleValueOfDay,\r\n  handleDateOfWeek,\r\n  handleValueOfWeek,\r\n  handleDateOfMonth,\r\n  handleValueOfMonth\r\n } from \"../../util\";\r\nimport { Radio } from 'antd';\r\n\r\nexport const Detail = () => {\r\n  let { id } = useParams();\r\n  const dispatch = useDispatch();\r\n  const dataDetail = useSelector(state => state.tracker.dataDetail);\r\n  const [dataHistoricalCountry, setDataHistoricalCountry] = useState({});\r\n\r\n  const [dateCases, setDateCases] = useState([]);\r\n  const [valueCases, setvalueCases] = useState([]);\r\n  const [valueDeaths, setvalueDeaths] = useState([]);\r\n  const [valueRecovered, setvalueRecovered] = useState([]);\r\n  const [focus, setFocus] = useState(\"Day\");\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchDetailCountry(id))\r\n    axios.get(`https://disease.sh/v3/covid-19/historical/${id}?lastdays=all`)\r\n      .then(response => setDataHistoricalCountry(response.data.timeline))\r\n  }, [])\r\n\r\n  const handleFocusChange = e => {\r\n    setFocus(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const dateCases = handleDateOfDay(dataHistoricalCountry, \"cases\");\r\n    const valueCases = handleValueOfDay(dataHistoricalCountry, \"cases\");\r\n    const valueDeaths = handleValueOfDay(dataHistoricalCountry, \"deaths\");\r\n    const valueRecovered = handleValueOfDay(dataHistoricalCountry, \"recovered\");\r\n\r\n    setDateCases(dateCases);\r\n    setvalueCases(valueCases)\r\n    setvalueDeaths(valueDeaths)\r\n    setvalueRecovered(valueRecovered)\r\n  }, [dataHistoricalCountry])\r\n\r\n  const handleDataDay = () => {\r\n    const dateCases = handleDateOfDay(dataHistoricalCountry, \"cases\");\r\n    const valueCases = handleValueOfDay(dataHistoricalCountry, \"cases\");\r\n    const valueDeaths = handleValueOfDay(dataHistoricalCountry, \"deaths\");\r\n    const valueRecovered = handleValueOfDay(dataHistoricalCountry, \"recovered\");\r\n\r\n    setDateCases(dateCases);\r\n    setvalueCases(valueCases)\r\n    setvalueDeaths(valueDeaths)\r\n    setvalueRecovered(valueRecovered)\r\n  };\r\n\r\n  const handleDataWeek = () => {\r\n    const dateCases = handleDateOfWeek(dataHistoricalCountry, \"cases\");\r\n    const valueCases = handleValueOfWeek(dataHistoricalCountry, \"cases\");\r\n    const valueDeaths = handleValueOfWeek(dataHistoricalCountry, \"deaths\");\r\n    const valueRecovered = handleValueOfWeek(dataHistoricalCountry, \"recovered\");\r\n\r\n    setDateCases(dateCases);\r\n    setvalueCases(valueCases)\r\n    setvalueDeaths(valueDeaths)\r\n    setvalueRecovered(valueRecovered)\r\n  };\r\n\r\n  const handleDataMonth = () => {\r\n    const dateCases = handleDateOfMonth(dataHistoricalCountry, \"cases\");\r\n    const valueCases = handleValueOfMonth(dataHistoricalCountry, \"cases\");\r\n    const valueDeaths = handleValueOfMonth(dataHistoricalCountry, \"deaths\");\r\n    const valueRecovered = handleValueOfMonth(dataHistoricalCountry, \"recovered\");\r\n\r\n    setDateCases(dateCases);\r\n    setvalueCases(valueCases)\r\n    setvalueDeaths(valueDeaths)\r\n    setvalueRecovered(valueRecovered)\r\n  };\r\n\r\n  return (\r\n    <div className=\"detail\">\r\n      <div className=\"info_logo\">\r\n        <Card>\r\n          <CardContent style={{ textAlign: \"center\" }}>\r\n            <h3 style={{ color: \"black\" }}>{id}</h3>\r\n            <img src={dataDetail.countryInfo?.flag}></img>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n      <div className=\"detail_info\">\r\n        <Card className=\"infoBox\">\r\n          <CardContent className=\"infoBox_content\">\r\n            <Typography\r\n              className=\"infoBox_title\"\r\n              color=\"textSecondary\">Cases</Typography>\r\n            <h2>{numeral(dataDetail.todayCases).format(\"0,0\")}</h2>\r\n            <Typography\r\n              className=\"infoBox_total\"\r\n              color=\"textSecondary\">Total</Typography>\r\n            <h2>{numeral(dataDetail.cases).format(\"0,0\")}</h2>\r\n          </CardContent>\r\n        </Card>\r\n        <Card className=\"infoBox\">\r\n          <CardContent className=\"infoBox_content\">\r\n            <Typography\r\n              className=\"infoBox_title\"\r\n              color=\"textSecondary\">Recovered</Typography>\r\n            <h2>{numeral(dataDetail.todayRecovered).format(\"0,0\")}</h2>\r\n            <Typography\r\n              className=\"infoBox_total\"\r\n              color=\"textSecondary\">Total</Typography>\r\n            <h2>{numeral(dataDetail.recovered).format(\"0,0\")}</h2>\r\n          </CardContent>\r\n        </Card>\r\n        <Card className=\"infoBox\">\r\n          <CardContent className=\"infoBox_content\">\r\n            <Typography\r\n              className=\"infoBox_title\"\r\n              color=\"textSecondary\">Deaths</Typography>\r\n            <h2>{numeral(dataDetail.todayDeaths).format(\"0,0\")}</h2>\r\n            <Typography\r\n              className=\"infoBox_total\"\r\n              color=\"textSecondary\">Total</Typography>\r\n            <h2>{numeral(dataDetail.deaths).format(\"0,0\")}</h2>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n\r\n      <div className=\"detail_graph\" style={{marginBottom:\"10px\"}}>\r\n        <Card>\r\n          <CardContent>\r\n            <Radio.Group value={focus} onChange={handleFocusChange}>\r\n              <Radio.Button\r\n                onClick={handleDataDay}\r\n                value=\"Day\">Day</Radio.Button>\r\n              <Radio.Button\r\n                onClick={handleDataWeek}\r\n                value=\"Week\">Week</Radio.Button>\r\n              <Radio.Button\r\n                onClick={handleDataMonth}\r\n                value=\"Month\">Month</Radio.Button>\r\n            </Radio.Group>\r\n            <div className=\"graph_chart\"\r\n            style={{height:\"300px\"}}>\r\n              <Line\r\n                options={options}\r\n                data={{\r\n                  labels: dateCases,\r\n                  datasets: [\r\n                    {\r\n                      fill: false,\r\n                      label: \"Cases\",\r\n                      borderColor: \"#F46310\",\r\n                      pointRadius: 0,\r\n                      data: valueCases\r\n                    },\r\n                    {\r\n                      fill: false,\r\n                      label: \"Deaths\",\r\n                      borderColor: \"#4E1AE4\",\r\n                      pointRadius: 0,\r\n                      data: valueDeaths\r\n                    },\r\n                    {\r\n                      fill: false,\r\n                      label: \"Recovered\",\r\n                      borderColor: \"#14A958\",\r\n                      pointRadius: 0,\r\n                      data: valueRecovered\r\n                    },\r\n                  ]\r\n                }}\r\n              />\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n","C:\\Users\\NhiLM\\Desktop\\Reactjs_Homework\\Covid19_Tracker\\Tracker_18_12\\NhiLM_CovidTracker\\src\\pages\\user\\sign-in\\index.jsx",["102","103","104"],"C:\\Users\\NhiLM\\Desktop\\Reactjs_Homework\\Covid19_Tracker\\Tracker_18_12\\NhiLM_CovidTracker\\src\\pages\\user\\sign-up\\index.jsx",[],"C:\\Users\\NhiLM\\Desktop\\Reactjs_Homework\\Covid19_Tracker\\Tracker_18_12\\NhiLM_CovidTracker\\src\\components\\NotFound\\index.jsx",[],"C:\\Users\\NhiLM\\Desktop\\Reactjs_Homework\\Covid19_Tracker\\Tracker_18_12\\NhiLM_CovidTracker\\src\\components\\Header\\index.jsx",[],"C:\\Users\\NhiLM\\Desktop\\Reactjs_Homework\\Covid19_Tracker\\Tracker_18_12\\NhiLM_CovidTracker\\src\\auth\\auth.jsx",[],"C:\\Users\\NhiLM\\Desktop\\Reactjs_Homework\\Covid19_Tracker\\Tracker_18_12\\NhiLM_CovidTracker\\src\\pages\\home\\infoBox\\index.jsx",[],"C:\\Users\\NhiLM\\Desktop\\Reactjs_Homework\\Covid19_Tracker\\Tracker_18_12\\NhiLM_CovidTracker\\src\\pages\\home\\map\\index.jsx",[],"C:\\Users\\NhiLM\\Desktop\\Reactjs_Homework\\Covid19_Tracker\\Tracker_18_12\\NhiLM_CovidTracker\\src\\pages\\home\\graph\\index.jsx",["105"],"import { Radio } from 'antd';\r\nimport React, { useState,useEffect } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport { useSelector } from 'react-redux';\r\nimport { options } from \"../../../util\";\r\nimport { handleDateOfDay,\r\n  handleValueOfDay,\r\n  handleDateOfWeek,\r\n  handleValueOfWeek,\r\n  handleDateOfMonth,\r\n  handleValueOfMonth\r\n } from \"../../../util/\";\r\nimport \"./graph.css\";\r\n\r\nfunction Graph({ }) {\r\n  const dataHistoricalAll = useSelector(state => state.tracker.dataHistoricalAll);\r\n  const [focus, setFocus] = useState(\"Day\");\r\n\r\n  const [dateCases, setDateCases] = useState([]);\r\n  const [valueCases, setvalueCases] = useState([]);\r\n  const [valueDeaths, setvalueDeaths] = useState([]);\r\n  const [valueRecovered, setvalueRecovered] = useState([]);\r\n\r\n  const handleFocusChange = e => {\r\n    setFocus(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n      const dateCases = handleDateOfDay(dataHistoricalAll, \"cases\");\r\n      const valueCases = handleValueOfDay(dataHistoricalAll, \"cases\");\r\n      const valueDeaths = handleValueOfDay(dataHistoricalAll, \"deaths\");\r\n      const valueRecovered = handleValueOfDay(dataHistoricalAll, \"recovered\");\r\n  \r\n      setDateCases(dateCases);\r\n      setvalueCases(valueCases)\r\n      setvalueDeaths(valueDeaths)\r\n      setvalueRecovered(valueRecovered)\r\n  },[dataHistoricalAll])\r\n\r\n  const handleDataDay = () => {\r\n    const dateCases = handleDateOfDay(dataHistoricalAll, \"cases\");\r\n    const valueCases = handleValueOfDay(dataHistoricalAll, \"cases\");\r\n    const valueDeaths = handleValueOfDay(dataHistoricalAll, \"deaths\");\r\n    const valueRecovered = handleValueOfDay(dataHistoricalAll, \"recovered\");\r\n\r\n    setDateCases(dateCases);\r\n    setvalueCases(valueCases)\r\n    setvalueDeaths(valueDeaths)\r\n    setvalueRecovered(valueRecovered)\r\n  };\r\n\r\n  const handleDataWeek = () => {\r\n    const dateCases = handleDateOfWeek(dataHistoricalAll, \"cases\");\r\n    const valueCases = handleValueOfWeek(dataHistoricalAll, \"cases\");\r\n    const valueDeaths = handleValueOfWeek(dataHistoricalAll, \"deaths\");\r\n    const valueRecovered = handleValueOfWeek(dataHistoricalAll, \"recovered\");\r\n\r\n    setDateCases(dateCases);\r\n    setvalueCases(valueCases)\r\n    setvalueDeaths(valueDeaths)\r\n    setvalueRecovered(valueRecovered)\r\n  };\r\n\r\n  const handleDataMonth = () => {\r\n    const dateCases = handleDateOfMonth(dataHistoricalAll, \"cases\");\r\n    const valueCases = handleValueOfMonth(dataHistoricalAll, \"cases\");\r\n    const valueDeaths = handleValueOfMonth(dataHistoricalAll, \"deaths\");\r\n    const valueRecovered = handleValueOfMonth(dataHistoricalAll, \"recovered\");\r\n\r\n    setDateCases(dateCases);\r\n    setvalueCases(valueCases)\r\n    setvalueDeaths(valueDeaths)\r\n    setvalueRecovered(valueRecovered)\r\n  };\r\n\r\n  return (\r\n    <div className=\"graph_line\">\r\n      <Radio.Group value={focus} onChange={handleFocusChange}>\r\n        <Radio.Button\r\n          onClick={handleDataDay}\r\n          value=\"Day\">Day</Radio.Button>\r\n        <Radio.Button\r\n          onClick={handleDataWeek}\r\n          value=\"Week\">Week</Radio.Button>\r\n        <Radio.Button\r\n          onClick={handleDataMonth}\r\n          value=\"Month\">Month</Radio.Button>\r\n      </Radio.Group>\r\n      <div className=\"graph_chart\" style={{height:\"300px\"}}>\r\n        <Line\r\n          options={options}\r\n          data={{\r\n            labels: dateCases,\r\n            datasets: [\r\n              {\r\n                fill: false,\r\n                label: \"Cases\",\r\n                borderColor: \"#F46310\",\r\n                pointRadius: 0,\r\n                data: valueCases\r\n              },\r\n              {\r\n                fill: false,\r\n                label: \"Deaths\",\r\n                borderColor: \"#4E1AE4\",\r\n                pointRadius: 0,\r\n                data: valueDeaths\r\n              },\r\n              {\r\n                fill: false,\r\n                label: \"Recovered\",\r\n                borderColor: \"#14A958\",\r\n                pointRadius: 0,\r\n                data: valueRecovered\r\n              },\r\n            ]\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Graph;","C:\\Users\\NhiLM\\Desktop\\Reactjs_Homework\\Covid19_Tracker\\Tracker_18_12\\NhiLM_CovidTracker\\src\\pages\\home\\table\\index.jsx",[],"C:\\Users\\NhiLM\\Desktop\\Reactjs_Homework\\Covid19_Tracker\\Tracker_18_12\\NhiLM_CovidTracker\\src\\util\\constant.jsx",[],"C:\\Users\\NhiLM\\Desktop\\Reactjs_Homework\\Covid19_Tracker\\Tracker_18_12\\NhiLM_CovidTracker\\src\\util\\index.jsx",["106","107","108","109"],"import React from \"react\";\r\nimport numeral from \"numeral\";\r\nimport { Circle, Popup } from \"react-leaflet\";\r\nimport { lastDayOfMonths, lastDayOfWeeks } from \"./constant\";\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\n\r\n//For Table\r\nexport const sortData = (data) => {\r\n  const sortedData = [...data];\r\n  sortedData.sort((a, b) => {\r\n    if (a.cases > b.cases) {\r\n      return -1;\r\n    } else {\r\n      return 1;\r\n    }\r\n  })\r\n  return sortedData;\r\n};\r\n\r\nexport const sortReverseData = (data) => {\r\n  const sortedData = [...data];\r\n  sortedData.sort((a, b) => {\r\n    if (a.cases > b.cases) {\r\n      return 1;\r\n    } else {\r\n      return -1;\r\n    }\r\n  })\r\n  return sortedData;\r\n};\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginRight: theme.spacing(2),\r\n    marginLeft: 0,\r\n    width: '60%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(3),\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('md')]: {\r\n      width: '20ch',\r\n    },\r\n  },\r\n}));\r\n\r\n//For Map\r\nexport const showDataOnMap = (data, casesType = \"cases\") => {\r\n  return data.map((country) => (\r\n    <Circle\r\n      center={[country.countryInfo.lat, country.countryInfo.long]}\r\n      color={casesTypeColors[casesType].hex}\r\n      radius={\r\n        Math.sqrt(country[casesType]) * casesTypeColors[casesType].multiplier\r\n      }\r\n    >\r\n      <Popup>\r\n        <div className=\"info-container\">\r\n          <div\r\n            className=\"info-flag\"\r\n            style={{ backgroundImage: `url(${country.countryInfo.flag})` }}\r\n          ></div>\r\n          <div className=\"info-name\">{country.country}</div>\r\n          <div className=\"info-confirmed\">\r\n            Cases: {numeral(country.cases).format(\"0,0\")}\r\n          </div>\r\n          <div className=\"info-recovered\">\r\n            Recovered: {numeral(country.recovered).format(\"0,0\")}\r\n          </div>\r\n          <div className=\"info-deaths\">\r\n            Deaths: {numeral(country.deaths).format(\"0,0\")}\r\n          </div>\r\n        </div>\r\n      </Popup>\r\n    </Circle>\r\n  ));\r\n}\r\n\r\nconst casesTypeColors = {\r\n  cases: {\r\n    hex: \"#FF7F50\",\r\n    multiplier: 500,\r\n  },\r\n  recovered: {\r\n    hex: \"#40E0D0\",\r\n    multiplier: 500,\r\n  },\r\n  deaths: {\r\n    hex: \"#6495ED\",\r\n    multiplier: 800,\r\n  },\r\n};\r\n\r\n//For Graph\r\nexport const options = {\r\n  legend: {\r\n    display: true,\r\n  },\r\n  elements: {\r\n    point: {\r\n      radius: 0,\r\n    },\r\n  },\r\n  maintainAspectRatio: false,\r\n  tooltips: {\r\n    mode: \"index\",\r\n    intersect: false,\r\n    callbacks: {\r\n      label: function (tooltipItem) {\r\n        return numeral(tooltipItem.value).format(\"+0,0\");\r\n      },\r\n    },\r\n  },\r\n  scales: {\r\n    xAxes: [\r\n      {\r\n        time: {\r\n          format: \"MM/DD/YY\",\r\n          tooltipFormat: \"ll\",\r\n        },\r\n      },\r\n    ],\r\n    yAxes: [\r\n      {\r\n        ticks: {\r\n          callback: function (value) {\r\n            return numeral(value).format(\"0a\");\r\n          },\r\n        },\r\n      },\r\n    ],\r\n  },\r\n};\r\n\r\nexport const handleDateOfDay = (data, caseType) => {\r\n  let newData = [];\r\n  for (let date in data[caseType]) {\r\n    newData.push(date)\r\n  }\r\n  return newData;\r\n};\r\n\r\nexport const handleValueOfDay = (data, caseType) => {\r\n  let newData = [];\r\n  for (let date in data[caseType]) {\r\n    newData.push(data[caseType][date])\r\n  }\r\n  return newData;\r\n};\r\n\r\nexport const handleDateOfWeek = (data, casesType) => {\r\n  let newData = [];\r\n  for (let date in data[casesType]) {\r\n    lastDayOfWeeks.map(item => {\r\n      if (item === date) {\r\n        newData.push(date)\r\n      }\r\n    });\r\n  }\r\n  return newData;\r\n}\r\n\r\nexport const handleValueOfWeek = (data, casesType) => {\r\n  let newData = [];\r\n  for (let date in data[casesType]) {\r\n    lastDayOfWeeks.map(item => {\r\n      if (item === date) {\r\n        newData.push(data[casesType][date])\r\n      }\r\n    });\r\n  }\r\n  return newData;\r\n}\r\n\r\nexport const handleDateOfMonth = (data, casesType) => {\r\n  let newData = [];\r\n  for (let date in data[casesType]) {\r\n    lastDayOfMonths.map(item => {\r\n      if (item === date) {\r\n        newData.push(date)\r\n      }\r\n    });\r\n  }\r\n  return newData;\r\n}\r\n\r\nexport const handleValueOfMonth = (data, casesType) => {\r\n  let newData = [];\r\n  for (let date in data[casesType]) {\r\n    lastDayOfMonths.map(item => {\r\n      if (item === date) {\r\n        newData.push(data[casesType][date])\r\n      }\r\n    });\r\n  }\r\n  return newData;\r\n}",{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","severity":1,"message":"115","line":5,"column":7,"nodeType":"116","messageId":"117","endLine":5,"endColumn":16},{"ruleId":"114","severity":1,"message":"118","line":14,"column":7,"nodeType":"116","messageId":"117","endLine":14,"endColumn":16},{"ruleId":"119","severity":1,"message":"120","line":51,"column":14,"nodeType":"121","messageId":"122","endLine":51,"endColumn":17},{"ruleId":"123","severity":1,"message":"124","line":29,"column":6,"nodeType":"125","endLine":29,"endColumn":8,"suggestions":"126"},{"ruleId":"127","severity":1,"message":"128","line":40,"column":23,"nodeType":"129","messageId":"122","endLine":40,"endColumn":25},{"ruleId":"123","severity":1,"message":"130","line":36,"column":6,"nodeType":"125","endLine":36,"endColumn":8,"suggestions":"131"},{"ruleId":"132","severity":1,"message":"133","line":96,"column":13,"nodeType":"134","endLine":96,"endColumn":53},{"ruleId":"114","severity":1,"message":"135","line":1,"column":17,"nodeType":"116","messageId":"117","endLine":1,"endColumn":25},{"ruleId":"114","severity":1,"message":"136","line":7,"column":19,"nodeType":"116","messageId":"117","endLine":7,"endColumn":25},{"ruleId":"114","severity":1,"message":"137","line":7,"column":27,"nodeType":"116","messageId":"117","endLine":7,"endColumn":32},{"ruleId":"119","severity":1,"message":"120","line":15,"column":16,"nodeType":"121","messageId":"122","endLine":15,"endColumn":19},{"ruleId":"138","severity":1,"message":"139","line":190,"column":29,"nodeType":"140","messageId":"141","endLine":190,"endColumn":31},{"ruleId":"138","severity":1,"message":"139","line":202,"column":29,"nodeType":"140","messageId":"141","endLine":202,"endColumn":31},{"ruleId":"138","severity":1,"message":"139","line":214,"column":30,"nodeType":"140","messageId":"141","endLine":214,"endColumn":32},{"ruleId":"138","severity":1,"message":"139","line":226,"column":30,"nodeType":"140","messageId":"141","endLine":226,"endColumn":32},"no-native-reassign",["142"],"no-negated-in-lhs",["143"],"no-unused-vars","'saveLocal' is assigned a value but never used.","Identifier","unusedVar","'loadLocal' is assigned a value but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["144"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","React Hook useEffect has missing dependencies: 'dispatch' and 'id'. Either include them or remove the dependency array.",["145"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useState' is defined but never used.","'Button' is defined but never used.","'Space' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation",{"desc":"146","fix":"147"},{"desc":"148","fix":"149"},"Update the dependencies array to be: [dispatch]",{"range":"150","text":"151"},"Update the dependencies array to be: [dispatch, id]",{"range":"152","text":"153"},[1136,1138],"[dispatch]",[1373,1375],"[dispatch, id]"]